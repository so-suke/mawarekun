{"version":3,"sources":["cssModules/App.module.css","cssModules/NumberButtons.module.css","constants/index.tsx","utils/index.tsx","styledComponents/ShrinkNameButton.tsx","components/ContinueStartButton.tsx","components/ResetStartButton.tsx","components/NumberButtons.tsx","components/Rotations.tsx","components/StoreNames.tsx","App.tsx","index.tsx"],"names":["module","exports","STORE_NAMES","STORE_NAMES_LEND_RATES_MAP","Map","STORE_NAMES_EXCHANGE_RATES_MAP","STORE_NAME_BALL_NUMBER_LENT","ROTATION_MODE","ERROR_MSG","last","array","length","sleep","ms","Promise","resolve","setTimeout","ShrinkNameButton","styled","Button","ContinueStartButton","props","variant","className","onClick","rotationNumberInputed","setIsCorrectBallNumberConfirm","setRotations","rotations","concat","type","rotationNumber","Number","rotationRateMostRecent","rotationRate","clearRotationNumberInputed","error","alert","continueStart","ResetStartButton","id","isResetStarted","selectStoreRef","current","value","now","Date","startTime","format","startDate","setRemarks","remarksNow","delimiter","setItemLocalStoragePageIndex","resetStart","NumberButtons","map","number","styles","font_button","setRotationNumberInputed","style","getStyleSizeTenKey","Rotations","rotation","index","content","ListGroup","Item","StoreNames","$doms","disabled","hidden","$storeNames","storeNames","store","$domsConcated","axios","require","default","config","delta","App","handlers","useSwipeable","onSwipedLeft","eventData","toNextPage","onSwipedRight","toPrevPage","useState","pageIndex","setPageIndex","sizeTenKey","setSizeTenKey","setRotationRate","investmentCnt","setInvestmentCnt","rotationNumberTotal","setRotationNumberTotal","border","setBorder","storeName","setStoreName","machineName","setMachineName","ballNumberConfirm","setBallNumberConfirm","ballNumberAutoRotation","setBallNumberAutoRotation","rotationNumberAutoRotation","setRotationNumberAutoRotation","remarks","lendRate","setLendRate","isCorrectBallNumberConfirm","ballNumberBigHitBefore","setBallNumberBigHitBefore","ballNumberBigHitAfter","setBallNumberBigHitAfter","roundBase","setRoundBase","roundRecord","setRoundRecord","wonBallNumberRecord","setWonBallNumberRecord","roundTotal","setRoundTotal","wonBallNumberTotal","setWonBallNumberTotal","spreadSheetId","setSpreadSheetId","machineNumberInStore","setMachineNumberInStore","rotationListRef","useRef","document","createElement","rotationButtonRef","setItemLocalStorage","keyName","setValue","localStorage","setItem","getItemLocalStorage","getDefault","getItem","useCallback","getItemLocalStoragePageIndex","init","paddingTop","paddingBottom","useEffect","pageIndexLocal","machineNumberInStoreLocal","spreadSheetIdLocal","sizeTenKeyLocal","investmentCntLocal","rotationsParsed","JSON","parse","storeNameLocal","machineNameLocal","ballNumberConfirmLocal","borderLocal","remarksLocal","ballNumberBigHitBeforeLocal","ballNumberBigHitAfterLocal","roundBaseLocal","roundRecordLocal","wonBallNumberRecordLocal","calcRotationRate","totalRotationNumberCalculatted","forEach","idx","calcRotationNumberTotal","sumRoundBaseRecords","record","split","reduce","prev","curr","recordsTotal","toFixed","scrollTop","scrollHeight","stringify","storeLendRate","get","String","rotationUnitPrice","useMemo","unitPriceEquivalent","exchangeRate","undefined","resultStr","hasCountFunctionBigHitBallNumber","getWorkAmount","getBallNumberLent","hasOwnProperty","Error","deleteAllRotation","window","confirm","a","diffBallNumber","clickRotation","then","click","countInvestment","diffRotationNumber","isInteger","countInvestmentDecimal","parseInt","rotationNumberExtra","Math","round","rotationNumberPerInvestment","floor","investmentCntNow","rotationNumberInputedClone","rotationNumberLast","before","numberBeMovedUpIfNeed","slice","beCompared","isMoveUp","createBefore","after","getRotationNumberShortInputed","rotationNumberDiffFromLast","exchangeRateRatio","rotationNumberTotalNow","rotationRateNow","Container","bg_warning","Row","Col","data-testid","rotationsLength","rotationsDeleted","filter","rotationNumberDiffShouldSub","deleteOneRotation","FormControl","onChange","event","target","placeholder","ref","InputGroup","size","Prepend","Text","input","wonBallNumberCalculated","lineBreakIf","calculateWonBallNumber","as","rows","inputMode","Append","autoRotation","Form","Control","remarksInputed","startDateLocal","timeStart","date","timeEnd","params","URLSearchParams","append","post","response","catch","writeWorkResultAndDeleteAllRotation","min","max","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.82861d29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_warning\":\"App_bg_warning__2uihL\",\"font_button\":\"App_font_button__uusV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font_button\":\"NumberButtons_font_button__1NMiq\"};","import { TypeErrorMsg } from \"../types\";\n\n// 店名\nexport const STORE_NAMES = [\"DoruNakano\", \"LiNakano\", \"NtNakano\"];\n// 店と貸出率のマップ\nexport const STORE_NAMES_LEND_RATES_MAP = new Map([\n  [STORE_NAMES[0], 4.38],\n  [STORE_NAMES[1], 4],\n  [STORE_NAMES[2], 4],\n]);\n// 店と交換率のマップ\nexport const STORE_NAMES_EXCHANGE_RATES_MAP = new Map([\n  [STORE_NAMES[0], 4],\n  [STORE_NAMES[1], 3.57],\n  [STORE_NAMES[2], 3.57],\n]);\nexport const STORE_NAME_BALL_NUMBER_LENT = {\n  [STORE_NAMES[0]]: 114,\n  [STORE_NAMES[1]]: 125,\n  [STORE_NAMES[2]]: 125,\n};\n// 選択肢：店名の初期タイトル\nexport const SELECT_STORE_TITLE: string = \"店名を選択して下さい。\";\n// 通常の交換率\nexport const EXCHANGE_RATE_NORMAL: number = 4;\n// ワンプッシュ辺りの金額\nexport const AMOUNT_ONE_PUSH = 500;\n// スプレッドシートREST_URL\nexport const REST_URL_SPREADSHEET =\n  \"https://script.google.com/macros/s/AKfycbxeKw7JURtSWjKhNWusNdDHO_nxwLSTVqbyjFo_0bOrZLV47gAtCxJEta32cIoXkt7dWg/exec\";\nexport const REPLENISHMENT_AMOUNT = 500;\n// 直近の回転率計算に用いる。\nexport const REPLENISHMENT_AMOUNT_RATIO = 1000 / REPLENISHMENT_AMOUNT;\n\nexport const ROTATION_MODE: { [key: string]: string } = {\n  normal: \"normal\",\n  continueStart: \"continueStart\",\n  resetStart: \"resetStart\",\n};\n\n// エラーメッセージ\nexport const ERROR_MSG: TypeErrorMsg = {\n  resetStart: \"リセットスタートをしましょう\",\n  resetStartedAlready: \"既にリセットスタートされています\",\n  rotaionNumberEmpty: \"回転数を入力しましょう\",\n  selectStore: \"店名を選択して下さい。\",\n  notExpectedStoreName: \"エラー可能性。存在しない店名が渡されました。\",\n  bigHitBallNumberBeforeBigThanAfter: \"エラー\\n大当たり玉数に関して\\n大当前より大当後の方が大きくなるようにしましょう\",\n};\n","export const last = (array: any[]) => {\n  return array[array.length - 1];\n};\n\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n","import { Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nexport const ShrinkNameButton = styled(Button)`\n  font-size: 0.4rem;\n`;\n","import React from \"react\";\nimport { ShrinkNameButton } from \"../styledComponents/ShrinkNameButton\";\nimport { TypeRotation } from \"../types\";\nimport { ERROR_MSG, ROTATION_MODE } from \"../constants\";\n\nexport function ContinueStartButton(props: {\n  rotationNumberInputed: string;\n  rotationRate: number;\n  rotations: TypeRotation[];\n  clearRotationNumberInputed: Function;\n  setRotations: Function;\n  setIsCorrectBallNumberConfirm: Function;\n}) {\n  // 継続スタート\n  const continueStart = () => {\n    try {\n      if (props.rotationNumberInputed === \"\") {\n        throw ERROR_MSG.rotaionNumberEmpty;\n      }\n\n      props.setIsCorrectBallNumberConfirm(false);\n\n      props.setRotations(\n        props.rotations.concat({\n          type: ROTATION_MODE.continueStart,\n          rotationNumber: Number(props.rotationNumberInputed),\n          rotationRateMostRecent: 0,\n          rotationRate: props.rotationRate,\n        })\n      );\n\n      props.clearRotationNumberInputed();\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return (\n    <>\n      <ShrinkNameButton variant=\"primary\" className=\"col-4\" onClick={() => continueStart()}>\n        継続スタート\n      </ShrinkNameButton>{\" \"}\n    </>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { ShrinkNameButton } from \"../styledComponents/ShrinkNameButton\";\nimport { TypeRotation } from \"../types\";\nimport { ERROR_MSG, ROTATION_MODE } from \"../constants\";\n\nexport function ResetStartButton(props: {\n  rotationNumberInputed: string;\n  rotations: TypeRotation[];\n  selectStoreRef: React.MutableRefObject<HTMLSelectElement>;\n  isResetStarted: Function;\n  clearRotationNumberInputed: Function;\n  setRotations: Function;\n  setRemarks: Function;\n  setItemLocalStoragePageIndex: Function;\n}) {\n  const resetStart = () => {\n    try {\n      if (props.isResetStarted()) {\n        throw ERROR_MSG.resetStartedAlready;\n      }\n      if (props.rotationNumberInputed === \"\") {\n        throw ERROR_MSG.rotaionNumberEmpty;\n      }\n      if (props.selectStoreRef.current.value === \"\") {\n        throw ERROR_MSG.selectStore;\n      }\n\n      props.setRotations(\n        props.rotations.concat({\n          type: ROTATION_MODE.resetStart,\n          rotationNumber: Number(props.rotationNumberInputed),\n          rotationRateMostRecent: 0,\n          rotationRate: 0,\n        })\n      );\n\n      props.clearRotationNumberInputed();\n\n      // 備考に稼働開始時間を書込\n      const now = new Date();\n      const startTime = format(now, \"HH:mm\");\n      const startDate = format(now, \"yyyy/MM/dd HH:mm\");\n      props.setRemarks((remarksNow: string) => {\n        const delimiter = remarksNow === \"\" ? \"\" : \"\\n\";\n        props.setRemarks(`${remarksNow}${delimiter}開始時間：${startTime}`);\n      });\n      props.setItemLocalStoragePageIndex(\"startDate\", startDate);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return (\n    <>\n      <ShrinkNameButton id=\"resetStartButton\" variant=\"primary\" className=\"col-4\" onClick={() => resetStart()}>\n        リセットスタート\n      </ShrinkNameButton>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../cssModules/NumberButtons.module.css\";\n\nexport function NumberButtons(props: { setRotationNumberInputed: Function; rotationNumberInputed: string; getStyleSizeTenKey: Function }) {\n  const numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n\n  return (\n    <>\n      {numbers.map((number) => (\n        <Button\n          key={number}\n          className={`col-4 ${styles.font_button}`}\n          onClick={() => props.setRotationNumberInputed(props.rotationNumberInputed + number)}\n          style={props.getStyleSizeTenKey()}\n        >\n          {number}\n        </Button>\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\nimport { TypeRotation } from \"../types\";\nimport { ROTATION_MODE } from \"../constants\";\nimport { ListGroup } from \"react-bootstrap\";\n\nexport function Rotations(props: { rotations: TypeRotation[] }) {\n  return (\n    <>\n      {props.rotations.map((rotation, index) => {\n        let content = \"\";\n        if (rotation.type === ROTATION_MODE.resetStart) {\n          content = `${rotation.rotationNumber} --start--`;\n        } else if (rotation.type === ROTATION_MODE.continueStart) {\n          content = `${rotation.rotationNumber} > start`;\n        } else if (rotation.type === ROTATION_MODE.normal) {\n          content = `${rotation.rotationNumber} ${rotation.rotationRateMostRecent} ${rotation.rotationRate}`;\n        }\n        return <ListGroup.Item key={index} className=\"py-1\">{content}</ListGroup.Item>;\n      })}\n    </>\n  );\n}\n","import React from \"react\";\nimport { TypeStoreName } from \"../types\";\nimport { SELECT_STORE_TITLE } from \"../constants\";\n\nexport function StoreNames(props: { storeNames: TypeStoreName[] }) {\n  const $doms = [\n    <option key={\"defaultValue\"} value=\"\" disabled hidden>\n      {SELECT_STORE_TITLE}\n    </option>,\n  ];\n  const $storeNames = props.storeNames.map((store: TypeStoreName) => {\n    return (\n      <option key={store} value={store}>\n        {store}\n      </option>\n    );\n  });\n\n  const $domsConcated = [$doms, ...$storeNames];\n\n  return <>{$domsConcated}</>;\n}\n","import React, { useState, useRef, useEffect, useMemo, useCallback } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, FormControl, Form, Button, ListGroup, InputGroup } from \"react-bootstrap\";\nimport { format, parse } from \"date-fns\";\n// 型定義インポート\nimport { TypeRotation } from \"./types\";\n// 定数定義インポート\nimport {\n  STORE_NAMES,\n  STORE_NAMES_LEND_RATES_MAP,\n  STORE_NAMES_EXCHANGE_RATES_MAP,\n  STORE_NAME_BALL_NUMBER_LENT,\n  EXCHANGE_RATE_NORMAL,\n  REST_URL_SPREADSHEET,\n  REPLENISHMENT_AMOUNT,\n  REPLENISHMENT_AMOUNT_RATIO,\n  ROTATION_MODE,\n  ERROR_MSG,\n} from \"./constants\";\n// 便利系関数インポート\nimport { last, sleep } from \"./utils\";\n// 各コンポーネントをインポート\nimport { ContinueStartButton } from \"./components/ContinueStartButton\";\nimport { ResetStartButton } from \"./components/ResetStartButton\";\nimport { NumberButtons } from \"./components/NumberButtons\";\nimport { Rotations } from \"./components/Rotations\";\nimport { StoreNames } from \"./components/StoreNames\";\nimport { useSwipeable } from \"react-swipeable\";\n// css modulesインポート\nimport styles from \"./cssModules/App.module.css\";\n\nconst axios = require(\"axios\").default;\n\nconst config = { delta: 100 };\n\n// なぜ'-1'なのか？↓\n// ページ再読込時に初期pageIndexのページデータが初期化されるのを防ぐため\nconst PAGE_INDEX_PREVENT_INIT = -1;\n\nfunction App() {\n  const handlers = useSwipeable({\n    onSwipedLeft: (eventData) => toNextPage(),\n    onSwipedRight: (eventData) => toPrevPage(),\n    ...config,\n  });\n  // useState定義\n  const [pageIndex, setPageIndex] = useState(PAGE_INDEX_PREVENT_INIT);\n  const [sizeTenKey, setSizeTenKey] = useState(\"12\");\n  const [rotationNumberInputed, setRotationNumberInputed] = useState<string>(\"\");\n  const [rotations, setRotations] = useState<TypeRotation[]>([]);\n  const [rotationRate, setRotationRate] = useState(0);\n  const [investmentCnt, setInvestmentCnt] = useState(0);\n  const [rotationNumberTotal, setRotationNumberTotal] = useState(0);\n  const [border, setBorder] = useState<string>(\"\");\n  const [storeName, setStoreName] = useState(\"\");\n  const [machineName, setMachineName] = useState(\"\");\n  const [ballNumberConfirm, setBallNumberConfirm] = useState(\"\");\n  const [ballNumberAutoRotation, setBallNumberAutoRotation] = useState(\"\");\n  const [rotationNumberAutoRotation, setRotationNumberAutoRotation] = useState(\"\");\n  const [remarks, setRemarks] = useState(\"\");\n  const [lendRate, setLendRate] = useState<string>(\"\");\n  const [isCorrectBallNumberConfirm, setIsCorrectBallNumberConfirm] = useState(true);\n  const [ballNumberBigHitBefore, setBallNumberBigHitBefore] = useState(\"\");\n  const [ballNumberBigHitAfter, setBallNumberBigHitAfter] = useState(\"\");\n  const [roundBase, setRoundBase] = useState(0);\n  const [roundRecord, setRoundRecord] = useState(\"\");\n  const [wonBallNumberRecord, setWonBallNumberRecord] = useState(\"\");\n  const [roundTotal, setRoundTotal] = useState(0);\n  const [wonBallNumberTotal, setWonBallNumberTotal] = useState(0);\n  const [spreadSheetId, setSpreadSheetId] = useState(\"\");\n  const [machineNumberInStore, setMachineNumberInStore] = useState(\"\");\n\n  // useRef定義\n  const rotationListRef = useRef<HTMLDivElement>(null);\n  const selectStoreRef = useRef<HTMLSelectElement>(document.createElement(\"select\"));\n  const rotationButtonRef = useRef<HTMLButtonElement>(document.createElement(\"button\"));\n\n  // ローカルストレージ系関数\n  const setItemLocalStorage = (keyName: string, setValue: string) => {\n    localStorage.setItem(keyName, setValue);\n  };\n  const getItemLocalStorage = (keyName: string, getDefault: string) => {\n    return localStorage.getItem(keyName) || getDefault;\n  };\n\n  // 各ページで固有のものにしたいデータを保存するために使用する関数。\n  const setItemLocalStoragePageIndex = useCallback(\n    (keyName: string, setValue: string) => {\n      if (pageIndex === PAGE_INDEX_PREVENT_INIT) return;\n      localStorage.setItem(`${keyName}_${pageIndex}`, setValue);\n    },\n    [pageIndex]\n  );\n  const getItemLocalStoragePageIndex = useCallback(\n    (keyName: string, init: string) => {\n      const result = localStorage.getItem(`${keyName}_${pageIndex}`) || init;\n      return result;\n    },\n    [pageIndex]\n  );\n  const getStyleSizeTenKey: Function = useCallback(() => {\n    return { paddingTop: `${sizeTenKey}px`, paddingBottom: `${sizeTenKey}px` };\n  }, [sizeTenKey]);\n\n  // 初回描画時に実行\n  useEffect(() => {\n    const pageIndexLocal: number = Number(getItemLocalStorage(\"pageIndex\", \"0\"));\n    setPageIndex(pageIndexLocal);\n  }, []);\n\n  useEffect(() => {\n    // ローカルストレージから各値を取得。\n    const machineNumberInStoreLocal: string = getItemLocalStoragePageIndex(\"machineNumberInStore\", \"\");\n    const spreadSheetIdLocal: string = getItemLocalStorage(\"spreadSheetId\", \"\");\n    const sizeTenKeyLocal: string = getItemLocalStorage(\"sizeTenKey\", \"10\");\n    const investmentCntLocal: string = getItemLocalStoragePageIndex(\"investmentCnt\", \"0\");\n    const rotationsParsed: TypeRotation[] = JSON.parse(getItemLocalStoragePageIndex(\"rotations\", \"[]\"));\n    const storeNameLocal: string = getItemLocalStoragePageIndex(\"storeName\", \"\");\n    const machineNameLocal: string = getItemLocalStoragePageIndex(\"machineName\", \"\");\n    const ballNumberConfirmLocal: string = getItemLocalStoragePageIndex(\"ballNumberConfirm\", \"\");\n    const borderLocal: string = getItemLocalStoragePageIndex(\"border\", \"18.0\");\n    const remarksLocal: string = getItemLocalStoragePageIndex(\"remarks\", \"\");\n    const ballNumberBigHitBeforeLocal: string = getItemLocalStoragePageIndex(\"ballNumberBigHitBefore\", \"0\");\n    const ballNumberBigHitAfterLocal: string = getItemLocalStoragePageIndex(\"ballNumberBigHitAfter\", \"0\");\n    const roundBaseLocal: number = Number(getItemLocalStoragePageIndex(\"roundBase\", \"\"));\n    const roundRecordLocal: string = getItemLocalStoragePageIndex(\"roundRecord\", \"\");\n    const wonBallNumberRecordLocal: string = getItemLocalStoragePageIndex(\"wonBallNumberRecord\", \"\");\n\n    setMachineNumberInStore(machineNumberInStoreLocal);\n    setSpreadSheetId(spreadSheetIdLocal);\n    setSizeTenKey(sizeTenKeyLocal);\n    setInvestmentCnt(Number(investmentCntLocal));\n    setRotations(rotationsParsed);\n    setRotationRate(calcRotationRate(rotationsParsed));\n    setRotationNumberTotal(calcRotationNumberTotal(rotationsParsed));\n    setStoreName(storeNameLocal);\n    setMachineName(machineNameLocal);\n    setBallNumberConfirm(ballNumberConfirmLocal);\n    setBorder(borderLocal);\n    setRemarks(remarksLocal);\n    setBallNumberBigHitBefore(ballNumberBigHitBeforeLocal);\n    setBallNumberBigHitAfter(ballNumberBigHitAfterLocal);\n    setRoundBase(roundBaseLocal);\n    setRoundRecord(roundRecordLocal);\n    setWonBallNumberRecord(wonBallNumberRecordLocal);\n  }, [getItemLocalStoragePageIndex]);\n\n  const sumRoundBaseRecords = (record: string) => {\n    const regexSplit = /[\\n.,]/;\n    const records = record.split(regexSplit).map((record) => Number(record));\n    const recordsTotal = records.reduce((prev, curr) => {\n      return prev + curr;\n    }, 0);\n\n    return recordsTotal;\n  };\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"machineNumberInStore\", machineNumberInStore);\n  }, [machineNumberInStore, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    setItemLocalStorage(\"sizeTenKey\", sizeTenKey);\n  }, [sizeTenKey]);\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"wonBallNumberRecord\", wonBallNumberRecord);\n    const recordsTotal = sumRoundBaseRecords(wonBallNumberRecord);\n    setWonBallNumberTotal(recordsTotal);\n  }, [wonBallNumberRecord, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"roundRecord\", roundRecord);\n    const recordsTotal = sumRoundBaseRecords(roundRecord);\n    setRoundTotal(recordsTotal);\n  }, [roundRecord, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    const roundBase = Number((wonBallNumberTotal / roundTotal).toFixed(1));\n    setRoundBase(roundBase);\n    setItemLocalStoragePageIndex(\"roundBase\", \"\" + roundBase);\n  }, [roundTotal, wonBallNumberTotal, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    (rotationListRef as any).current.scrollTop = (rotationListRef as any).current.scrollHeight;\n    setItemLocalStoragePageIndex(\"rotations\", JSON.stringify(rotations));\n  }, [rotations, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"investmentCnt\", \"\" + investmentCnt);\n  }, [investmentCnt, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"border\", border);\n  }, [border, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"ballNumberConfirm\", ballNumberConfirm);\n  }, [ballNumberConfirm, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"remarks\", remarks);\n  }, [remarks, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    setItemLocalStoragePageIndex(\"machineName\", machineName);\n  }, [machineName, setItemLocalStoragePageIndex]);\n\n  useEffect(() => {\n    // 選択肢の店名が変更されたら、対応した交換率へ変更する。\n    const storeLendRate = STORE_NAMES_LEND_RATES_MAP.get(storeName);\n    setLendRate(String(storeLendRate));\n    setItemLocalStoragePageIndex(\"storeName\", storeName);\n  }, [storeName, setItemLocalStoragePageIndex]);\n\n  // ■useMemo系\n  // 「回転単価」が「ボーダーまたは回転率」に対する「導出項目」のため。\n  const rotationUnitPrice = useMemo<number>(() => {\n    if (rotationRate === 0) return 0;\n    const unitPriceEquivalent = 1000 / Number(border) - 1000 / rotationRate;\n    // todo: 後で治す\n    let exchangeRate = STORE_NAMES_EXCHANGE_RATES_MAP.get(storeName);\n    if (exchangeRate === undefined) {\n      exchangeRate = 4;\n    }\n    const resultStr = ((unitPriceEquivalent / 4) * exchangeRate).toFixed(1);\n    const result = Number(resultStr);\n    return result;\n  }, [border, rotationRate, storeName]);\n\n  // ■change系\n  function changeMachineNumberInStore(event: React.ChangeEvent<HTMLInputElement>) {\n    setMachineNumberInStore(event.target.value);\n  }\n\n  function changeSpreadSheetId(event: React.ChangeEvent<HTMLInputElement>) {\n    setSpreadSheetId(event.target.value);\n    setItemLocalStorage(\"spreadSheetId\", spreadSheetId);\n  }\n\n  function changeSizeButton(event: React.ChangeEvent<HTMLInputElement>) {\n    setSizeTenKey(event.target.value);\n  }\n\n  function changeStoreNamesSelect(event: React.ChangeEvent<HTMLInputElement>) {\n    setStoreName(event.target.value);\n  }\n\n  function changeBorder(event: React.ChangeEvent<HTMLInputElement>) {\n    setBorder(event.target.value);\n  }\n\n  // 機種名の変更\n  function changeMachineName(event: React.ChangeEvent<HTMLInputElement>) {\n    const machineName = event.target.value;\n    setMachineName(machineName);\n  }\n\n  // 備考の変更\n  function changeRemarks(event: React.ChangeEvent<HTMLInputElement>) {\n    const remarksInputed = event.target.value;\n    setRemarks(remarksInputed);\n  }\n\n  // 大当前玉数の変更\n  function changeBallNumberBigHitBefore(event: React.ChangeEvent<HTMLInputElement>) {\n    const input = event.target.value;\n    setItemLocalStoragePageIndex(\"ballNumberBigHitBefore\", input);\n    setBallNumberBigHitBefore(input);\n  }\n\n  // 大当後玉数の変更\n  function changeBallNumberBigHitAfter(event: React.ChangeEvent<HTMLInputElement>) {\n    const input = event.target.value;\n    setItemLocalStoragePageIndex(\"ballNumberBigHitAfter\", input);\n    setBallNumberBigHitAfter(input);\n  }\n\n  // 獲得玉数記録の変更\n  function changeWonBallNumberRecord(event: React.ChangeEvent<HTMLInputElement>) {\n    const input = event.target.value;\n    setWonBallNumberRecord(input);\n  }\n\n  // ラウンド記録の変更\n  function changeRoundRecord(event: React.ChangeEvent<HTMLInputElement>) {\n    const input = event.target.value;\n    setRoundRecord(input);\n  }\n\n  // 回転数入力ミス防止用玉数の変更\n  function changeBallNumberConfirm(event: React.ChangeEvent<HTMLInputElement>) {\n    const ballNumberConfirm = event.target.value;\n    setBallNumberConfirm(ballNumberConfirm);\n  }\n\n  // 自動回転に使用する玉数\n  function changeBallNumberAutoRotation(event: React.ChangeEvent<HTMLInputElement>) {\n    const ballNumberAutoRotation = event.target.value;\n    setBallNumberAutoRotation(ballNumberAutoRotation);\n  }\n\n  // 自動回転に使用する回転数\n  function changeRotationNumberAutoRotation(event: React.ChangeEvent<HTMLInputElement>) {\n    const rotationNumberAutoRotation = event.target.value;\n    setRotationNumberAutoRotation(rotationNumberAutoRotation);\n  }\n\n  function changeRotationNumberInputed(event: React.ChangeEvent<HTMLInputElement>) {\n    setRotationNumberInputed(event.target.value);\n  }\n\n  // ■通常関数定義\n  function isResetStarted() {\n    return rotations.length > 0 && rotations[0].type === ROTATION_MODE.resetStart;\n  }\n\n  // 今選択している店舗が大当たり出玉計数機能を付けているかどうか\n  function hasCountFunctionBigHitBallNumber() {\n    return storeName === \"NtNakano\";\n  }\n\n  function clearRotationNumberInputed() {\n    setRotationNumberInputed(\"\");\n  }\n\n  function getWorkAmount() {\n    return (rotationUnitPrice * rotationNumberTotal).toFixed(0);\n  }\n\n  // 獲得玉数の計算\n  function calculateWonBallNumber() {\n    try {\n      if (window.confirm(\"獲得玉数の計算、入力を行います\")) {\n        // 大当たり後 ー 大当たり前　で　獲得玉数を計算\n        const wonBallNumberCalculated = Number(ballNumberBigHitAfter) - Number(ballNumberBigHitBefore);\n        // 大当たり前の玉数が大当たり後より大きければエラー\n        if (wonBallNumberCalculated < 0) {\n          throw ERROR_MSG.bigHitBallNumberBeforeBigThanAfter;\n        }\n        // 改行するかどうか？初回書き込み時は改行しない。\n        const lineBreakIf = wonBallNumberRecord === \"\" ? \"\" : \"\\n\";\n        setWonBallNumberRecord(`${wonBallNumberRecord}${lineBreakIf}${wonBallNumberCalculated},`);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  // 一回の貸出ボタン玉数\n  function getBallNumberLent(storeName: string): number {\n    const ballNumberLentDefault = 125;\n    try {\n      if (!STORE_NAME_BALL_NUMBER_LENT.hasOwnProperty(storeName)) {\n        throw new Error(ERROR_MSG.notExpectedStoreName);\n      }\n      return STORE_NAME_BALL_NUMBER_LENT[storeName];\n    } catch (error) {\n      alert(error);\n      return ballNumberLentDefault;\n    }\n  }\n\n  // 前のページへ移動\n  function toPrevPage() {\n    // ページが0未満に行かないようにする。\n    if (pageIndex === 0) return;\n    setItemLocalStorage(\"pageIndex\", \"\" + (pageIndex - 1));\n    setPageIndex(pageIndex - 1);\n  }\n  // 次のページへ移動\n  function toNextPage() {\n    // ページが10より上に行かないようにする。\n    if (pageIndex === 10) return;\n    setItemLocalStorage(\"pageIndex\", \"\" + (pageIndex + 1));\n    setPageIndex(pageIndex + 1);\n  }\n\n  //　回転配列を1行削除する。\n  function deleteOneRotation() {\n    const rotationsLength = rotations.length;\n\n    if (rotationsLength === 0) return;\n\n    // 削除時は、一律で正しいことにする。\n    setIsCorrectBallNumberConfirm(true);\n\n    // 投資回数の調整\n    if (last(rotations).type === ROTATION_MODE.normal) {\n      setInvestmentCnt(investmentCnt - 1);\n    }\n\n    const rotationsDeleted = rotations.filter((rotation, index) => {\n      return index !== rotationsLength - 1;\n    });\n\n    // 回転率の更新\n    // 長さが1の時、必ずリセットスタートなので、回転率は0に設定してあります。\n    if (rotationsDeleted.length === 1 || rotationsDeleted.length === 0) {\n      setRotationRate(0);\n    } else {\n      setRotationRate(last(rotationsDeleted).rotationRate);\n    }\n\n    // 総回転数の更新\n    if (last(rotations).type === ROTATION_MODE.normal && rotationsDeleted.length > 0) {\n      const rotationNumberDiffShouldSub = last(rotations).rotationNumber - last(rotationsDeleted).rotationNumber;\n      setRotationNumberTotal(rotationNumberTotal - rotationNumberDiffShouldSub);\n    }\n\n    setRotations(rotationsDeleted);\n\n    // 確認用玉数を計算\n    setBallNumberConfirm(String(Number(ballNumberConfirm) + getBallNumberLent(storeName)));\n  }\n\n  // 画面の初期読込時に使用\n  function calcRotationNumberTotal(rotations: TypeRotation[]) {\n    let totalRotationNumberCalculatted = 0;\n    rotations.forEach((rotation, idx) => {\n      if (rotation.type === ROTATION_MODE.resetStart || rotation.type === ROTATION_MODE.continueStart) return;\n      totalRotationNumberCalculatted += rotation.rotationNumber - rotations[idx - 1].rotationNumber;\n    });\n    return totalRotationNumberCalculatted;\n  }\n\n  // 画面の初期読込時に使用\n  function calcRotationRate(rotations: TypeRotation[]) {\n    if (rotations.length === 0) return 0;\n    return last(rotations).rotationRate;\n  }\n\n  // 「回転配列の全行削除」と「初期化するべきデータの初期化」\n  function deleteAllRotation() {\n    if (window.confirm(\"全行削除してもいいですか？\")) {\n      setRotations([]);\n      setRotationRate(0);\n      setInvestmentCnt(0);\n      setRotationNumberTotal(0);\n      setBallNumberConfirm(\"\");\n      setMachineName(\"\");\n      setRemarks(\"\");\n      setRoundRecord(\"\");\n      setWonBallNumberRecord(\"\");\n      setMachineNumberInStore(\"\");\n      if (hasCountFunctionBigHitBallNumber()) {\n        setBallNumberBigHitBefore(\"\");\n        setBallNumberBigHitAfter(\"\");\n      }\n    }\n  }\n\n  // 最後の結果書込処理（全行削除も行う）\n  function writeWorkResultAndDeleteAllRotation() {\n    const now = new Date();\n    const startDateLocal = getItemLocalStoragePageIndex(\"startDate\", \"2021/1/1 10:00\");\n    const startDate = parse(startDateLocal, \"yyyy/MM/dd HH:mm\", new Date());\n    const timeStart = format(startDate, \"HH:mm\");\n    const date = format(startDate, \"yyyy/MM/dd\");\n    const timeEnd = format(now, \"HH:mm\");\n\n    if (spreadSheetId === \"\") {\n      alert(\"ssidを入力して下さい。\");\n      return;\n    }\n\n    const params = new URLSearchParams();\n    params.append(\"spreadsheetId\", `${spreadSheetId}`);\n    params.append(\"date\", `${date}`);\n    params.append(\"timeStart\", `${timeStart}`);\n    params.append(\"timeEnd\", `${timeEnd}`);\n    params.append(\"border\", `${border}`);\n    params.append(\"rotationRate\", `${rotationRate}`);\n    params.append(\"rotationUnitPrice\", `${rotationUnitPrice}`);\n    params.append(\"rotationNumberTotal\", `${rotationNumberTotal}`);\n    params.append(\"roundBase\", `${roundBase}`);\n    params.append(\"workAmount\", `${getWorkAmount()}`);\n    params.append(\"machineName\", `${machineName}`);\n    params.append(\"storeName\", `${storeName}`);\n    params.append(\"machineNumberInStore\", `${machineNumberInStore}`);\n    params.append(\"remarks\", `${remarks}`);\n\n    axios\n      .post(REST_URL_SPREADSHEET, params)\n      .then(function (response: any) {\n        alert(\"書込が成功しました。\");\n        deleteAllRotation();\n      })\n      .catch(function (error: any) {\n        alert(error);\n      });\n  }\n\n  // 回転数の短縮入力の判別（返り値は、回転数）\n  function shouldShortInput() {\n    return String(rotationNumberInputed).length < 3 && String(last(rotations).rotationNumber).length > 1;\n  }\n\n  // 短縮入力された「回転数を返す」\n  function getRotationNumberShortInputed(): number {\n    const digitsHowMuch = 2;\n    const rotationNumberLast: string = String(last(rotations).rotationNumber);\n    const isMoveUp = (beCompared: number, rotationNumberInputed: number) => beCompared > rotationNumberInputed;\n    const createBefore = (): number => {\n      // 分解パート\n      const numberBeMovedUpIfNeed = Number(rotationNumberLast.slice(0, -digitsHowMuch));\n      const numberBeCompared = Number(rotationNumberLast.slice(-digitsHowMuch));\n      // 「比較パート」と「繰上げパート」\n      const before = isMoveUp(numberBeCompared, Number(rotationNumberInputed)) ? numberBeMovedUpIfNeed + 1 : numberBeMovedUpIfNeed;\n\n      return before;\n    };\n\n    const before = createBefore();\n    const after = (\"00\" + rotationNumberInputed).slice(-digitsHowMuch);\n    // 連結パート\n    return Number(before + after);\n  }\n\n  // 自動回転\n  async function autoRotation() {\n    if (ballNumberAutoRotation === \"\" || rotationNumberAutoRotation === \"\") {\n      alert(\"玉数または回転数を指定しましょう\");\n      return;\n    }\n\n    // 玉数の差から投資回数を算出\n    const diffBallNumber = Number(ballNumberConfirm) - Number(ballNumberAutoRotation);\n    if (diffBallNumber < 0) {\n      alert(\"自動回転の玉数は、確認用玉数より大きい値を指定しましょう。\");\n      return;\n    }\n\n    // 回転ボタンを非同期でクリックするために作成。\n    const clickRotation = () => {\n      return sleep(1).then(() => rotationButtonRef.current.click());\n    };\n\n    let countInvestment = diffBallNumber / getBallNumberLent(storeName);\n    // 丁度いい回転数を自動入力するために算出\n    let diffRotationNumber = Number(rotationNumberAutoRotation) - last(rotations).rotationNumber;\n    // 投資回数が整数でない場合は、考えないことにしています。\n    if (!Number.isInteger(countInvestment)) {\n      if (!window.confirm(\"投資回数が整数ではありません。\\n半端を除いて計算してもいいですか？\")) return;\n      // 回転数の小数部分\n      const countInvestmentDecimal = countInvestment - parseInt(String(countInvestment));\n      // 投資回数を整数に修正\n      countInvestment -= countInvestmentDecimal;\n      // 余分な回転数を総回転数から引く\n      const rotationNumberExtra = Math.round(diffRotationNumber * countInvestmentDecimal);\n      diffRotationNumber -= rotationNumberExtra;\n    }\n    // 一回の投資ごとの回転数。ユーザへの確認に用います。厳密にやらずに、小数点は無視します。\n    const rotationNumberPerInvestment = Math.floor(diffRotationNumber / countInvestment);\n\n    // 自動回転の実施を確認します。\n    if (!window.confirm(`自動回転してもいいですか？\\n投資回数：${countInvestment}回\\n平均回転数：${rotationNumberPerInvestment}`)) return;\n    // 投資回数分、回転数を自動入力していきます。\n    for (let index = 0; index < countInvestment; index++) {\n      const rotationNumber = Number(rotationNumberAutoRotation) - rotationNumberPerInvestment * (countInvestment - 1 - index);\n      setRotationNumberInputed(String(rotationNumber));\n      await clickRotation();\n    }\n  }\n\n  // 通常回転（回転ボタン押下時の処理）\n  function rotation() {\n    try {\n      if (isResetStarted() === false) {\n        throw ERROR_MSG.resetStart;\n      }\n      // 以下の場合に、「確認用玉数チェック」をfalseにする。\n      // マイナスに突入しそうな場合、未入力の場合（Numberで変換すると0になるので特別記入しなくていい）\n      if (Number(ballNumberConfirm) < getBallNumberLent(storeName)) {\n        setIsCorrectBallNumberConfirm(false);\n      } else {\n        setIsCorrectBallNumberConfirm(true);\n      }\n\n      // 投資回数の計算\n      const investmentCntNow = investmentCnt + 1;\n      // 必要であれば短縮入力を効かせる。\n      const rotationNumberInputedClone = shouldShortInput() ? getRotationNumberShortInputed() : Number(rotationNumberInputed);\n      const rotationNumberDiffFromLast = Number(rotationNumberInputedClone) - last(rotations).rotationNumber;\n      //　交換率の比：通常交換率'4'と実交換率の比。回転率計算に用いる。\n      const exchangeRateRatio: number = Number(lendRate) / EXCHANGE_RATE_NORMAL;\n      const rotationRateMostRecent = Number((rotationNumberDiffFromLast * REPLENISHMENT_AMOUNT_RATIO * exchangeRateRatio).toFixed(1));\n\n      const rotationNumberTotalNow = rotationNumberTotal + rotationNumberDiffFromLast;\n\n      // 投資金額の比（todo:もう少し分かりやすく出来るかも？）\n      const investmentAmountRatio = 1000 / (REPLENISHMENT_AMOUNT * investmentCntNow);\n      const rotationRateNow = Number((rotationNumberTotalNow * investmentAmountRatio * exchangeRateRatio).toFixed(1));\n\n      clearRotationNumberInputed();\n\n      // 各種set\n      setInvestmentCnt(investmentCntNow);\n      setRotationNumberTotal(rotationNumberTotalNow);\n      setRotationRate(rotationRateNow);\n      setRotations(\n        rotations.concat({\n          type: ROTATION_MODE.normal,\n          rotationNumber: Number(rotationNumberInputedClone),\n          rotationRateMostRecent,\n          rotationRate: rotationRateNow,\n        })\n      );\n      // 確認用玉数を計算\n      setBallNumberConfirm(String(Number(ballNumberConfirm) - getBallNumberLent(storeName)));\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Container className={`pt-3 ${isCorrectBallNumberConfirm ? \"\" : styles.bg_warning}`} {...handlers}>\n        <Row>\n          <Col>\n            <p className=\"mb-0\">\n              <span>{pageIndex}ページ目</span>\n            </p>\n\n            <p className=\"mb-0\">\n              <span>{rotationUnitPrice}</span> * <span>{rotationNumberTotal}</span> = <span data-testid=\"work-amount\">{getWorkAmount()}</span>\n            </p>\n\n            <Row className=\"justify-content-between\">\n              <Button className=\"mb-1\" variant=\"primary\" onClick={() => deleteOneRotation()}>\n                1行削除\n              </Button>\n              <Button className={`mb-1 ${pageIndex === 0 ? \"d-none\" : \"\"}`} variant=\"primary\" onClick={() => toPrevPage()}>\n                前\n              </Button>\n              <Button className=\"mb-1\" variant=\"primary\" onClick={() => toNextPage()}>\n                次\n              </Button>\n            </Row>\n\n            <FormControl\n              className=\"mb-1\"\n              id=\"rotationNumberInput\"\n              value={rotationNumberInputed}\n              onChange={changeRotationNumberInputed}\n              placeholder=\"回転数入力\"\n            />\n\n            <Row className=\"mb-2\">\n              <NumberButtons\n                setRotationNumberInputed={setRotationNumberInputed}\n                rotationNumberInputed={rotationNumberInputed}\n                getStyleSizeTenKey={getStyleSizeTenKey}\n              />\n              <Button variant=\"primary\" className={`col-4 ${styles.font_button}`} onClick={() => clearRotationNumberInputed()}>\n                C\n              </Button>\n              <Button variant=\"primary\" className=\"col-4\"></Button>\n\n              <Button variant=\"primary\" className=\"col-4\" style={getStyleSizeTenKey()} ref={rotationButtonRef} onClick={() => rotation()}>\n                回転\n              </Button>\n\n              <ContinueStartButton\n                rotationNumberInputed={rotationNumberInputed}\n                rotationRate={rotationRate}\n                rotations={rotations}\n                clearRotationNumberInputed={clearRotationNumberInputed}\n                setRotations={setRotations}\n                setIsCorrectBallNumberConfirm={setIsCorrectBallNumberConfirm}\n              />\n\n              <ResetStartButton\n                rotationNumberInputed={rotationNumberInputed}\n                rotations={rotations}\n                selectStoreRef={selectStoreRef}\n                isResetStarted={isResetStarted}\n                clearRotationNumberInputed={clearRotationNumberInputed}\n                setRotations={setRotations}\n                setRemarks={setRemarks}\n                setItemLocalStoragePageIndex={setItemLocalStoragePageIndex}\n              />\n            </Row>\n          </Col>\n          <Col>\n            <ListGroup className=\"rotationList\" ref={rotationListRef}>\n              <Rotations rotations={rotations} />\n            </ListGroup>\n\n            <div className=\"mt-2\">\n              <div className={`mb-2 ${hasCountFunctionBigHitBallNumber() ? \"\" : \"d-none\"}`}>\n                <InputGroup size=\"sm\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>大当前玉数</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"number\" value={ballNumberBigHitBefore} onChange={changeBallNumberBigHitBefore} />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>大当後玉数</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"number\" value={ballNumberBigHitAfter} onChange={changeBallNumberBigHitAfter} />\n                </InputGroup>\n                <Button variant=\"primary\" size=\"sm\" onClick={() => calculateWonBallNumber()}>\n                  獲得玉数計算\n                </Button>\n              </div>\n              <span className=\"mb-0\">獲得玉数</span>\n              <InputGroup>\n                <FormControl\n                  as=\"textarea\"\n                  rows={2}\n                  placeholder=\"獲得玉数\"\n                  inputMode=\"numeric\"\n                  value={wonBallNumberRecord}\n                  onChange={changeWonBallNumberRecord}\n                />\n              </InputGroup>\n              <span className=\"mb-0\">ラウンド数</span>\n              <InputGroup>\n                <FormControl as=\"textarea\" rows={2} placeholder=\"ラウンド\" inputMode=\"numeric\" value={roundRecord} onChange={changeRoundRecord} />\n              </InputGroup>\n              <p className=\"mb-0\">rb: {roundBase}</p>\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Row>\n              <InputGroup size=\"sm\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>確認用玉数</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl value={ballNumberConfirm} data-testid=\"ball-number-confirm\" onChange={changeBallNumberConfirm} type=\"number\" />\n              </InputGroup>\n            </Row>\n            <Row>\n              <InputGroup size=\"sm\">\n                <FormControl\n                  value={ballNumberAutoRotation}\n                  data-testid=\"ball-number-auto-rotation\"\n                  onChange={changeBallNumberAutoRotation}\n                  type=\"number\"\n                  placeholder=\"玉数\"\n                />\n                <FormControl\n                  value={rotationNumberAutoRotation}\n                  data-testid=\"ball-number-auto-rotation\"\n                  onChange={changeRotationNumberAutoRotation}\n                  type=\"number\"\n                  placeholder=\"回転数\"\n                />\n                <InputGroup.Append>\n                  <Button variant=\"outline-primary\" onClick={() => autoRotation()}>\n                    自回\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Row>\n\n            <Row>\n              <InputGroup size=\"sm\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>ボーダー</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl value={border} data-testid=\"border\" onChange={changeBorder} type=\"number\" />\n              </InputGroup>\n            </Row>\n\n            <Row>\n              <InputGroup size=\"sm\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>台番</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl value={machineNumberInStore} data-testid=\"machineNumberInStore\" onChange={changeMachineNumberInStore} type=\"number\" />\n              </InputGroup>\n            </Row>\n\n            <Row>\n              <InputGroup size=\"sm\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>備考</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control as=\"textarea\" rows={2} value={remarks} onChange={changeRemarks} />\n              </InputGroup>\n            </Row>\n\n            <Row>\n              <Button className=\"mt-5\" variant=\"primary\" onClick={() => writeWorkResultAndDeleteAllRotation()}>\n                表書込＆全削\n              </Button>\n            </Row>\n\n            <Row>\n              <Button className=\"allDeteleBtn\" variant=\"primary\" onClick={() => deleteAllRotation()}>\n                全行削除\n              </Button>\n            </Row>\n          </Col>\n\n          <Col>\n            <div>\n              <InputGroup size=\"sm\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>店名</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control as=\"select\" value={storeName} onChange={changeStoreNamesSelect} ref={selectStoreRef}>\n                  <StoreNames storeNames={STORE_NAMES} />\n                </Form.Control>\n              </InputGroup>\n            </div>\n            <div>\n              <InputGroup size=\"sm\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>機種名</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl value={machineName} onChange={changeMachineName} />\n              </InputGroup>\n            </div>\n            <div>\n              <div className=\"mr-2\">交換率:{lendRate}</div>\n            </div>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>ボタン大きさ</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl value={sizeTenKey} min=\"1\" max=\"30\" onChange={changeSizeButton} type=\"number\" />\n            </InputGroup>\n\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>ssid</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl value={spreadSheetId} onChange={changeSpreadSheetId} />\n            </InputGroup>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}